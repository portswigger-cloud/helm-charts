# Default values for burpsuite.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  image:
    registry: public.ecr.aws
    pullPolicy: Always
    # Overrides the image tag which defaults to .CHart.appVersion.
    tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

runMode: LICENSE_ONLY
installationEnvironment: KUBERNETES

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "burpsuite"

pod:
  annotations: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

globalEnv:
  scanningMachineApiKey: ""
  idleTimeBeforePause: 3600
  otelEnvironment: "prod"
  awsRegion: "eu-west-1"

## @section Enterprise Server settings
##
enterprise:
  licenseKey: ""
  envFrom: []
  image:
    registry: ""
    repository: "portswigger/enterprise-server"
    tag: ""
    sha256: ""

  resources:
    cpu: 200m
    memory: 1.8Gi
  phsmMaxConcurrentScan: 300
  phsmMaxConcurrentConnectionChecks: 50
  serverJavaOpts: -Xms1g -Xmx1g
  burpJavaOpts: -Xms256m -Xmx256m

service:
  name: ""
  type: ClusterIP
  port: 80
  scimPort: 8089
  websocketPort: 8090
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  #        serviceName: ""
  #        servicePort: null
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  expose:
    websocket: false
    scim: false

## @section Web Server settings
##
web:
  authenticationToken: ""
  adminEmail: ""
  adminName: ""
  adminToken: ""
  envFrom: []
  image:
    registry: ""
    repository: "portswigger/web-server"
    tag: ""
    sha256: ""
  resources:
    cpu: 200m
    memory: 1Gi
  ipRangesAppUrl: https://ip-ranges.portswigger-dev.cloud
  serverJavaOpts: -Xms512m -Xmx512m

## @section Ephemeral Agent settings
##
agent:
  image:
    registry: ""
    repository: "portswigger/ephemeral-agent"
    tag: ""

podLogs:
  enabled: false

podMonitor:
  enabled: false

email:
  {}
  # fromAddress: noreply@example.com
  # smtpHost: mail.example.com
  # smtpPort: "465"
  # username: emailuser
  # password: emailPassword

## @section Database settings
##
database:
  useEmbedded: false

  image:
    registry: ""
    repository: "docker/library/postgres"
    tag: "16"
    sha256: ""

  externalUrl: "jdbc:postgresql://postgres-rw:5432/burp_enterprise"
  externalCredentials: false

  users:
    enterprise:
      # -- Username for the Enterprise Server database connection
      username: enterprise
      # -- Password for the Enterprise Server database connection
      password: ""
      # -- Connection username for the Enterprise Server database connection.
      # Required if connection username differs from internal username e.g. if @hostname suffix is mandated (Azure)
      connectionUsername: ""
    scanner:
      # -- Username for the Scanning Resource database connection
      username: scanner
      # -- Password for the Scanning Resource database connection
      password: ""
      # -- Connection username for the Scanning Resource database connection
      # Required if connection username differs from internal username e.g. if @hostname suffix is mandated (Azure)
      connectionUsername: ""

  # -- (int) Idle timeout (ms) for the database connection
  idleTimeout: 60000

  # -- (int) Maximum lifetime timeout (ms) for the database connection
  maxLifetimeTimeout: 120000

networkPolicy:
  enabled: false

  ingress: []

  ingressControllerNamespaceSelector:
    matchLabels:
      kubernetes.io/metadata.name: ingress

  ingressControllerPodSelector:
    matchLabels:
      app.kubernetes.io/name: nginx

  egress: []
  # - to:
  #   - ipBlock:
  #       cidr: 10.1.0.0/24
  #   ports:
  #   - protocol: TCP
  #     port: 5432

  httpsEgress: true

extraDeploy: []

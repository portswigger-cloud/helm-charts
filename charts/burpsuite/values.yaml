# Default values for burpsuite.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

global:
  image:
    repository: public.ecr.aws
    pullPolicy: Always
    # Overrides the image tag which defaults to .CHart.appVersion.
    tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}

## @section Enterprise Server settings
##
enterprise:
  image:
    registry: ""
    repository: "portswigger/enterprise-server"
    tag: ""

## @section Web Server settings
##
web:
  image:
    registry: ""
    repository: "portswigger/web-server"
    tag: ""

## @section Ephemeral Agent settings
##
agent:
  image:
    registry: ""
    repository: "portswigger/ephemeral-agent"
    tag: ""

## @section PostgreSQL subchart settings
##

## PostgreSQL chart configuration
## https://github.com/bitnami/charts/blob/main/bitnami/postgresql/values.yaml
##
postgresql:
  ## @param postgresql.enabled Deploy PostgreSQL subchart
  ##
  enabled: true
  ## @param postgresql.nameOverride Override name of the PostgreSQL chart
  ##
  nameOverride: ""
  auth:
    ## @param postgresql.auth.existingSecret Existing secret containing the password of the PostgreSQL chart
    ##
    existingSecret: ""
    ## @param postgresql.auth.password Password for the postgres user of the PostgreSQL chart (auto-generated if not set)
    ## ref: https://hub.docker.com/_/postgres/
    ##
    password: ""
    ## @param postgresql.auth.username Username to create when deploying the PostgreSQL chart
    ##
    username: bn_sonarqube
    ## @param postgresql.auth.database Database to create when deploying the PostgreSQL chart
    ##
    database: burpsuite
  ## PostgreSQL Primary parameters
  ##
  primary:
    ## PostgreSQL Primary service configuration
    ##
    service:
      ## @param postgresql.primary.service.ports.postgresql PostgreSQL service port
      ##
      ports:
        postgresql: 5432
    ## PostgreSQL Primary persistence configuration
    ##
    persistence:
      ## @param postgresql.primary.persistence.enabled Enable PostgreSQL Primary data persistence using PVC
      ##
      enabled: true
      ## @param postgresql.primary.persistence.existingClaim Name of an existing PVC to use
      ##
      existingClaim: ""
      ## @param postgresql.primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param postgresql.primary.persistence.accessMode PVC Access Mode for PostgreSQL volume
      ##
      accessMode: ReadWriteOnce
      ## @param postgresql.primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 8Gi

## @section External Database settings
##

## External Database Configuration
## These values are only used when postgresql.enabled is set to false
##
externalDatabase:
  ## @param externalDatabase.url JDBC URL of an external database (only if postgresql.enabled=false)
  ##
  url: ""

  users:
    server:
      ## @param externalDatabase.server.username User of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
      ##
      username: server
      ## @param externalDatabase.server.password Password of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
      ##
      password: ""
    scanner:
      ## @param externalDatabase.scanner.username User of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
      ##
      username: scanner
      ## @param externalDatabase.scanner.password Password of an external PostgreSQL instance to connect (only if postgresql.enabled=false)
      ##
      password: ""


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "scan-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "scan-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ min .Values.replicaCount 1 }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "scan-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "scan-controller.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/controller-env-secret: {{ $controllerEnvSec := include (print $.Template.BasePath "/controller-env-secret.yaml") . | fromYaml }}{{ $controllerEnvSec.data | toYaml | sha256sum }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccount: scan-controller
      serviceAccountName: scan-controller
      securityContext:
        fsGroup: 100000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: scan-controller
          securityContext:
            runAsNonRoot: true
            runAsUser: 100000
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            capabilities:
              drop:
                - ALL
          image: {{ include "scan-controller.controller.image" . }}
          envFrom:
            - secretRef:
                name: {{ include "scan-controller.fullname" . }}-env
            {{- with .Values.controller.envFrom }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          ports:
            - name: management
              containerPort: 8078
              protocol: TCP
          startupProbe:
            httpGet:
              port: management
              path: /health/readiness
            failureThreshold: 60
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              port: management
              path: /health/liveness
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
          readinessProbe:
            httpGet:
              port: management
              path: /health/readiness
            failureThreshold: 1
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 512Mi
      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

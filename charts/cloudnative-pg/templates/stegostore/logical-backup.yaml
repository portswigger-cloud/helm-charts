{{- if .Values.stegostore.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: stegostore
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: stegostore
    data.portswigger.cloud/pii: "true"
    data.portswigger.cloud/retention-period: subscription-lifetime
    data.portswigger.cloud/data-type: customer
    data.portswigger.cloud/data-classification: confidential
spec:
  schedule: {{.Values.stegostore.schedule}}
  successfulJobsHistoryLimit: 0
  concurrencyPolicy: {{.Values.stegostore.concurrencyPolicy}}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: stegostore
        spec:
          serviceAccountName: postgres
          nodeSelector:
            NodeType: customer-db
          tolerations:
            - key: portswigger.cloud/customer
              operator: Exists
          containers:
          - name: stegostore
            image: {{ .Values.aws.account_id }}.dkr.ecr.{{ .Values.aws.region }}.amazonaws.com/{{ .Values.stegostore.imageName }}@{{ .Values.stegostore.imageDigest }}
            imagePullPolicy: IfNotPresent
            env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-app
                  key: dbname
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-app
                  key: password
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres-app
                  key: username
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: postgres-app
                  key: port
            - name: S3PATH
              value: "s3://{{ .Values.aws.s3.backupBucketName }}/{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}/stegostore/"
            - name: KMS_KEY_ID
              value: "arn:aws:kms:{{ .Values.aws.region }}:{{ .Values.aws.account_id }}:alias/{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}"
            - name: PGHOST
              value: "postgres-rw"
          restartPolicy: Never
{{- end }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
  {{- with .Values.cluster.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    app.kubernetes.io/name: postgres
    data.portswigger.cloud/pii: "true"
    data.portswigger.cloud/retention-period: subscription-lifetime
    data.portswigger.cloud/data-type: customer
    data.portswigger.cloud/data-classification: confidential
spec:
  serviceAccountTemplate:
    metadata:
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.aws.account_id }}:role{{ .Values.aws.iam.rolePath }}{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}
  imageName: {{ .Values.cluster.imageName }}
  resources:
    requests:
      memory: {{ .Values.cluster.resources.requests.memory }}
      cpu: {{ .Values.cluster.resources.requests.cpu }}
    limits:
      memory: {{ .Values.cluster.resources.limits.memory }}
      cpu: {{ .Values.cluster.resources.limits.cpu }}
  instances: {{ .Values.cluster.instances }}
  primaryUpdateStrategy: {{ .Values.cluster.primaryUpdateStrategy }}
  primaryUpdateMethod: {{ .Values.cluster.primaryUpdateMethod }}
  storage:
    storageClass: {{ .Values.cluster.storage.storageClass }}
    size: {{ .Values.cluster.storage.size }}
  walStorage:
    storageClass: {{ .Values.cluster.walStorage.storageClass }}
    size: {{ .Values.cluster.walStorage.size }}
  bootstrap:
    initdb:
      database: {{ .Values.cluster.database.name }}
      owner: {{ .Values.cluster.database.owner }}
      {{- with .Values.cluster.database.postInitApplicationSQL }}
      postInitApplicationSQL:
      {{- toYaml . | nindent 6 }}
      {{- end }}
  {{- with .Values.cluster.affinity }}
  affinity:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  enablePDB: {{ .Values.cluster.enablePDB }}
  backup:
    barmanObjectStore:
      destinationPath: s3://{{ .Values.aws.s3Backups.bucketName }}/{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}
      s3Credentials:
        inheritFromIAMRole: True
      wal:
        compression: gzip
        maxParallel: 8
{{/*    Once CNPG upgraded to 1.23.3 or 1.24, uncomment: */}}
{{/*        encryption: "aws:kms"*/}}
{{/*    additionalArchiveCommandArgs:*/}}
{{/*    - "--sse-kms-key-id"*/}}
{{/*    - "alias/{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}"*/}}
      data:
        compression: gzip
        encryption: "aws:kms"
        immediateCheckpoint: false
        additionalCommandArgs:
          - "--sse-kms-key-id"
          - "alias/{{ .Values.aws.resourcePrefix }}{{ .Values.stackId }}"
        jobs: 2
    retentionPolicy: "90d"
  monitoring:
    enablePodMonitor: True
